name: Build & Release Project

on:
  push:
    tags: ["v*.*.*"]

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    strategy:
      matrix:
        platform:
          # - uname: x86-64 Windows
          #   os: Windows
          #   target: x86_64-pc-windows-gnu
          #   binName: hello-world.exe
          #   artifactName: hello-world-amd64.exe
          #   additionalPackages: ''

          # - uname: x86 Windows
          #   os: Windows
          #   target: i686-pc-windows-gnu
          #   binName: hello-world.exe
          #   artifactName: hello-world-i686.exe
          #   additionalPackages: ''

          - uname: x86-64 Linux
            os: Linux
            target: x86_64-unknown-linux-gnu
            binName: hello-world
            artifactName: hello-world.x86_64
            additionalPackages: ''

          - uname: x86 Linux
            os: Linux
            target: i686-unknown-linux-gnu
            binName: hello-world
            artifactName: hello-world.x86
            additionalPackages: 'gcc-multilib libc6-dev-i386'

          - uname: ARM64 Linux
            os: Linux
            target: armv7-unknown-linux-gnueabihf
            binName: hello-world
            artifactName: hello-world.armv7
            additionalPackages: 'gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libc6-dev-armhf-cross'

    name: Build backend bin
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true

      - name: Install cargo-deb
        if: ${{ matrix.platform.os }} == 'Linux'
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-deb

      - name: Install additional packages
        if: ${{ matrix.platform.additionalPackages }} != ''
        run: |
          sudo apt-get update
          sudo apt-get install ${{ matrix.platform.additionalPackages }}

      - name: Build for ${{ matrix.platform.uname }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.platform.target }}

      - name: Package Debian build artifact
        if: ${{ matrix.platform.os }} == 'Linux'
        run: |
          mkdir -p dist/deb
          cargo deb --target=${{ matrix.platform.target }}
          mv target/${{ matrix.platform.target }}/debian/*.deb dist/deb

      - name: Package raw build artifact
        run: |
          mkdir -p dist/bin
          mv target/${{ matrix.platform.target }}/release/${{ matrix.platform.binName }} dist/bin/

      - name: Upload binary artifacts
        uses: actions/upload-artifact@v4
        with:
          path: dist/bin/${{matrix.platform.binName}}
          name: ${{ matrix.platform.artifactName }}-bin

      - name: Upload Debian artifacts
        uses: actions/upload-artifact@v4
        with:
          path: dist/deb/*.deb
          name: ${{ matrix.platform.binName }}-${{ matrix.platform.target }}-deb

  deb:
    needs: build
    name: Push debian packages to repository
    runs-on: ubuntu-latest

    steps:
      - name: Prepare release directory
        run: mkdir dist

      - name: Download debian artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          pattern: "*-deb"

      - run: ls -la


  release:
    needs: build
    name: Release all project binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v4

      # - name: Get previous tag
      #   run: |
      #     name=$(git --no-pager tag --sort=creatordate | tail -2 | head -1)
      #     echo "Previous Tag: $name"
      #     echo "previous_tag=$name" >> $GITHUB_ENV

      - name: Prepare artifact dir
        run: mkdir dist

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          pattern: "*-bin"

      - name: Collect Build Artifacts
        run: |
          for f in artifacts/*/*; do
            fp=$(dirname $f);
            fn=$(basename "$fp");
            mv "$f" "dist/$fn";
          done

          cd dist
          sha256sum * > sums-all.sha256
          cd ..

      - name: Create Changelog
        uses: requarks/changelog-action@v1
        id: changelog
        with:
          token: ${{ github.token }}
          # fromTag: ${{ env.previous_tag }}
          # toTag: ${{ github.ref_name }}
          tag: ${{ github.ref_name }}
          writeToFile: false
          reverseOrder: true
          # excludeTypes: docs,chore

      - name: Create release
        uses: softprops/action-gh-release@v2.0.8
        with:
          name: "AutoBuild ${{ github.ref_name }}"
          body: ${{ steps.changelog.output.changes }}
          files: |
            dist/*
          generate_release_notes: true
          append_body: true
          make_latest: true
