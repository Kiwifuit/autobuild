name: Build & Release Project

on:
  push:
    tags: "v*.*.*"

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    strategy:
      matrix:
        platform:
          - uname: x86-64 Windows
            target: x86_64-pc-windows-gnu
            binName: hello-world.exe
            artifactName: hello-world-amd64.exe

          - uname: x86 Windows
            target: i686-pc-windows-gnu
            binName: hello-world.exe
            artifactName: hello-world-i686.exe

          - uname: x86-64 Linux
            target: x86_64-unknown-linux-gnu
            binName: hello-world
            artifactName: hello-world.x86_64

          - uname: x86 Linux
            target: i686-unknown-linux-gnu
            binName: hello-world
            artifactName: hello-world.x86

          - uname: ARM64 Linux
            target: armv7-unknown-linux-gnueabihf
            binName: hello-world
            artifactName: hello-world.armv7

    name: Build backend bin
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true

      - name: Build for ${{ matrix.platform.uname }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.platform.target }}
          use-cross: true

      - name: Package build artifact
        run: |
          mkdir dist
          mv target/${{ matrix.platform.target }}/release/${{ matrix.platform.binName }} dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: dist/${{matrix.platform.binName}}
          name: ${{ matrix.platform.artifactName }}

  release:
    needs: build
    name: Release all project binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Prepare artifact dir
        run: mkdir dist

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Collect Build Artifacts
        run: |
          for f in artifacts/*/*; do
            fp=$(dirname $f);
            fn=$(basename "$fp");
            mv "$f" "dist/$fn";
          done

          cd dist
          sha256sum * > sums-all.sha256
          cd ..

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: softprops/action-gh-release@v2.0.8
        with:
          body: ${{steps.github_release.outputs.changelog}}
          files: |
            dist/*
          generate_release_notes: true
